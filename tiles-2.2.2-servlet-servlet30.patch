--- src/tiles-servlet/src/main/java/org/apache/tiles/web/util/ServletContextAdapter.java	2010-06-17 20:31:44.000000000 +0200
+++ src/tiles-servlet/src/main/java/org/apache/tiles/web/util/ServletContextAdapter.java-gil	2012-06-06 19:18:12.755263369 +0200
@@ -21,17 +21,31 @@
 package org.apache.tiles.web.util;
 
 import java.io.InputStream;
+import java.lang.Class;
+import java.lang.ClassLoader;
+import java.lang.IllegalArgumentException;
+import java.lang.IllegalStateException;
+import java.lang.UnsupportedOperationException;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.Enumeration;
+import java.util.EventListener;
 import java.util.Hashtable;
+import java.util.Map;
 import java.util.Set;
 
+import javax.servlet.Filter;
+import javax.servlet.FilterRegistration;
+import javax.servlet.FilterRegistration.Dynamic;
 import javax.servlet.RequestDispatcher;
 import javax.servlet.Servlet;
 import javax.servlet.ServletConfig;
 import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
+import javax.servlet.ServletRegistration;
+import javax.servlet.SessionCookieConfig;
+import javax.servlet.SessionTrackingMode;
+import javax.servlet.descriptor.JspConfigDescriptor;
 
 /**
  * Adapts a servlet config and a servlet context to become a unique servlet
@@ -249,4 +263,135 @@
             return second.nextElement();
         }
     }
+
+    public JspConfigDescriptor getJspConfigDescriptor() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public ClassLoader getClassLoader() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public void declareRoles(String... roleNames) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public <T extends EventListener> T createListener(Class<T> c) throws ServletException {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public <T extends EventListener> void addListener(T t) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public void addListener(String className) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public void addListener(Class<? extends EventListener> listenerClass) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public Set<SessionTrackingMode> getEffectiveSessionTrackingModes() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public Set<SessionTrackingMode> getDefaultSessionTrackingModes() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingModes) throws IllegalStateException, IllegalArgumentException {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public SessionCookieConfig getSessionCookieConfig() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public Map<String,? extends FilterRegistration> getFilterRegistrations() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public FilterRegistration getFilterRegistration(String filterName) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public <T extends Filter> T createFilter(Class<T> c) throws ServletException {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public FilterRegistration.Dynamic addFilter(String filterName, Class<? extends Filter> filterClass) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public FilterRegistration.Dynamic addFilter(String filterName, Filter filter) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public FilterRegistration.Dynamic addFilter(String filterName, String className) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public Map<String,? extends ServletRegistration> getServletRegistrations() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public ServletRegistration getServletRegistration(String servletName) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public <T extends Servlet> T createServlet(Class<T> c) throws ServletException {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public ServletRegistration.Dynamic addServlet(String servletName, Class<? extends Servlet> servletClass) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public ServletRegistration.Dynamic addServlet(String servletName, String className) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public boolean setInitParameter(String name, String value) {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public int getEffectiveMinorVersion() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
+    public int getEffectiveMajorVersion() {
+        // TODO
+        throw new UnsupportedOperationException("Not supported.");
+    }
+
 }
